---

- name: Copy nova_userid script
  template:
     src: nova_userid.sh
     dest: /opt/
     mode: '0777'

- name: Update NOVA UID GID
  command: |
        /bin/bash -c "/opt/nova_userid.sh"

- name: Create triliovault log dir
  file:
    path: "{{ triliovault_log_dir }}"
    mode: '0755'
    owner: nova
    group: nova
    state: directory

- name: Create triliovault conf dir
  file:
    path: "{{ triliovault_cfg_dir }}"
    mode: '0755'
    owner: nova
    group: nova
    state: directory

- name: Create triliovault mount dir
  file:
    path: "{{ triliovault_mnt_dir }}"
    state: directory
    mode: '0777'

- name: Copy repo file
  template:
     src: triliovault.repo
     dest: "{{ trilio_yum_repo_file_path }}"

# - name: Update repository
#   command: /bin/bash -c "yum repolist"
  
- name: Install centos-release-openstack-{{OPENSTACK_DIST}}
  package:
    name:
      - "centos-release-openstack-{{OPENSTACK_DIST | lower}}"
    state: latest

- name: Install packages on wlm-api container | {{ PYTHON_VERSION }} devel and nova packages
  package:
    name:
      - "{{ PYTHON_VERSION }}-devel"
      - "{{ PYTHON_VERSION }}-nova"
    state: latest
   
- name: Install packages on wlm-api container | swig and libguestfs-tools packages
  package:
    name:
      - "swig" 
      - "libguestfs-tools"
    state: latest

- name: Install pre-requisites packages for m2crypto
  package:
    name:
      - "gcc"
      - "gcc-c++"
      - "make"
      - "openssl-devel"
    state: latest

- name: Install m2crypto packages on wlm-api container
  package:
    name:
      - "m2crypto" 
    state: latest

- name: Install & upgrade pip
  pip:
    name: pip
    executable: pip3
    state: latest

- name: Install all the jinja2 packages
  package:
    name: jinja2
    state: latest

- name: Install workloadmgr
  package:
    name: workloadmgr
    state: latest

- name: Install python3-s3-fuse-plugin
  package:
    name: python3-s3-fuse-plugin
    state: latest

- name: copy triliovault wlm workload conf
  template:
     src: triliovault-wlm.conf.j2
     dest: "{{ wlmapi_cfg }}"

- import_tasks: triliovault_db_sync.yml 

- name: Copy triliovault wlm api paste ini 
  template:
     src: api-paste.ini.j2
     dest: "{{ wlmapi_api_paste }}"

- name: Copy triliovault object store conf
  template:
     src: triliovault-object-store.conf.j2
     dest: "{{ triliovault_obj_sotre_cfg }}"
  when: NFS == False

- name: Enable triliovault object store service
  service:
    name: tvault-object-store.service
    enabled: yes
  when: NFS == False

- name: Start triliovault object store service
  service:
    name: tvault-object-store.service
    state: started
  when: NFS == False

- name: Enable triliovault wlm api service
  service:
    name: wlm-api
    enabled: yes

- name: Start triliovault wlm api service
  service:
    name: wlm-api
    state: started

- name: Enable triliovault wlm workloads service
  service:
    name: wlm-workloads
    enabled: yes

- name: Start triliovault wlm workloads service
  service:
    name: wlm-workloads
    state: started

- name: Enable triliovault wlm scheduler service
  service:
    name: wlm-scheduler
    enabled: yes

- name: Start triliovault wlm scheduler service
  service:
    name: wlm-scheduler
    state: started

- name: Enable triliovault wlm cron service
  service:
    name: wlm-cron
    enabled: yes

- name: Start triliovault wlm cron service
  service:
    name: wlm-cron
    state: started
