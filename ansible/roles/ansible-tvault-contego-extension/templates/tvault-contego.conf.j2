[DEFAULT]
{% if NFS == True %}
{% if multi_ip_nfs_enabled == True %}
vault_storage_nfs_export = {{triliovault_nfs_map[inventory_hostname]}}
{% elif multi_ip_nfs_enabled == False %}
vault_storage_nfs_export = {{ triliovault_storage_nfs_export|join(",") }}
{% endif %}
vault_storage_nfs_options = {{NFS_OPTIONS}}
vault_storage_type = nfs
{%elif S3|bool == True and s3_type == Amazon %}
vault_storage_type = s3
vault_storage_nfs_export = TrilioVault
vault_s3_auth_version = DEFAULT
vault_s3_access_key_id = {{VAULT_S3_ACCESS_KEY}}
vault_s3_secret_access_key = {{VAULT_S3_SECRET_ACCESS_KEY}}
vault_s3_region_name = {{VAULT_S3_REGION_NAME}}
vault_s3_bucket = {{VAULT_S3_BUCKET}}
vault_s3_signature_version = {{VAULT_S3_SIGNATURE_VERSION}}
{%elif S3|bool == True and s3_type == Other_S3_Compatible %}
vault_storage_nfs_export = TrilioVault
vault_storage_type = s3
vault_s3_auth_version = DEFAULT
vault_s3_access_key_id = {{VAULT_S3_ACCESS_KEY}}
vault_s3_secret_access_key = {{VAULT_S3_SECRET_ACCESS_KEY}}
vault_s3_region_name = {{VAULT_S3_REGION_NAME}}
vault_s3_bucket = {{VAULT_S3_BUCKET}}
vault_s3_endpoint_url = {{VAULT_S3_ENDPOINT_URL}}
vault_s3_signature_version = {{VAULT_S3_SIGNATURE_VERSION}}
vault_s3_ssl = {{VAULT_S3_SECURE}}
{% if VAULT_S3_SSL_CERT != "" %}
vault_s3_ssl_cert = {{VAULT_S3_SSL_CERT_PATH}}
{%else%}
vault_s3_ssl_cert =
{%endif%}
{%endif%}

vault_data_directory_old = {{TRILIOVAULT_MNT_DIR_OLD}}
vault_data_directory = {{TRILIOVAULT_MNT_DIR}}

log_dir = {{ TRILIOVAULT_LOG_DIR }}
log_file = {{ DATAMOVER_LOG_FILE }}
log_config = {{ DATAMOVER_LOG_CONF }}

##log_file = /var/log/tvault-contego/tvault-contego.log



debug = False
verbose = True
max_uploads_pending = 3
max_commit_pending = 3
dmapi_transport_url = {{tvault_vars.dmapi_transport_url}}

[dmapi_database]
connection = {{tvault_vars.dmapi_database_connection}}

[contego_sys_admin]
helper_command = sudo {{privsep_bin_path.stdout}}

[conductor]
use_local = True

[oslo_messaging_rabbit]
ssl = {{tvault_vars.rabbit_ssl}}

{%if tvault_vars.rabbit_ssl == true%}
{%if rabbitmq_user_ssl_key is defined %}
ssl_key_file = {{RABBITMQ_SSL_KEY_PATH}}
{%endif%}
{%if rabbitmq_user_ssl_cert is defined %}
ssl_cert_file = {{RABBITMQ_SSL_CERT_PATH}}
{%endif%}
{%if rabbitmq_user_ssl_ca_cert is defined %}
ssl_ca_file = {{RABBITMQ_SSL_CA_CERT_PATH}}
{%endif%}
{%endif%}

{% if ceph_backend_enabled | bool == True %}
[libvirt]
images_rbd_ceph_conf = /etc/ceph/ceph.conf
rbd_user = {{cinder_ceph_client}}

[ceph]
keyring_ext = .{{cinder_ceph_client}}.keyring
{%endif%}

[cinder]
http_retries = 10
