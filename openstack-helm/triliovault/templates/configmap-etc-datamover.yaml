{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.configmap_etc }}
{{- $envAll := . }}


{{/* **********************************************************************
     set triliovault_datamover.conf conf parameters
     **********************************************************************
*/}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_storage_type -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_storage_type" .Values.conf.triliovault.backup_target_type -}}
{{- end -}}


{{- if and (eq .Values.conf.triliovault.backup_target_type "nfs") (not .Values.conf.triliovault.nfs.multi_ip_nfs) -}}
{{- $share_list := list }}
{{- range $share := .Values.conf.triliovault.nfs.nfs_shares }}
{{- $share_path := get $share "path" -}}
{{- $share_ip := get $share "ip" -}}
{{- $share_string := printf "%s:%s" $share_ip $share_path }}
{{- $share_list =  append $share_list $share_string -}}
{{- end }}
{{- $shares_full_string := join "," $share_list }}
{{ $_ := set .Values.conf.datamover.DEFAULT "vault_storage_nfs_export" $shares_full_string -}}
{{- else -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_storage_nfs_export" "TrilioVault" -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_storage_nfs_options -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_storage_nfs_options" .Values.conf.triliovault.nfs.nfs_options -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_access_key_id -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_access_key_id" .Values.conf.triliovault.s3.access_key -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_secret_access_key -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_secret_access_key" .Values.conf.triliovault.s3.secret_key -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_region_name -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_region_name" .Values.conf.triliovault.s3.region_name -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_bucket -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_bucket" .Values.conf.triliovault.s3.bucket -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_signature_version -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_signature_version" .Values.conf.triliovault.s3.signature_version -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_auth_version -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_auth_version" .Values.conf.triliovault.s3.auth_version -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_endpoint_url -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_endpoint_url" .Values.conf.triliovault.s3.endpoint_url -}}
{{- end -}}

{{- if empty .Values.conf.datamover.DEFAULT.vault_s3_ssl -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_ssl" .Values.conf.triliovault.s3.ssl_enabled -}}
{{- end -}}

{{- if .Values.conf.triliovault.s3.ssl_enabled -}}
{{- $_ := set .Values.conf.datamover.DEFAULT "vault_s3_ssl_cert" "/etc/triliovault-datamover/s3-cert.pem" -}}
{{- end -}}


{{- if empty .Values.conf.datamover.DEFAULT.dmapi_transport_url -}}
{{- $_ := tuple "oslo_messaging_nova" "internal" "nova" "amqp" . | include "helm-toolkit.endpoints.authenticated_transport_endpoint_uri_lookup" | set .Values.conf.datamover.DEFAULT "dmapi_transport_url" -}}
{{- end -}}



{{- if empty .Values.conf.datamover.dmapi_database.connection -}}
{{- $connection := tuple "oslo_db_triliovault_datamover" "internal" "triliovault_datamover" "mysql" . | include "helm-toolkit.endpoints.authenticated_endpoint_uri_lookup" -}}
{{- if .Values.manifests.certificates -}}
{{- $_ := (printf "%s?charset=utf8&ssl_ca=/etc/mysql/certs/ca.crt&ssl_key=/etc/mysql/certs/tls.key&ssl_cert=/etc/mysql/certs/tls.crt&ssl_verify_cert" $connection ) | set .Values.conf.datamover.dmapi_database "connection" -}}
{{- else -}}
{{- $_ := set .Values.conf.datamover.dmapi_database "connection" $connection -}}
{{- end -}}
{{- end -}}


{{- if empty .Values.conf.datamover.libvirt.rbd_user -}}
{{- $_ := set .Values.conf.datamover.libvirt "rbd_user" .Values.ceph.rbd_user -}}
{{- end -}}

{{- $_ := printf ".%s.keyring" .Values.ceph.rbd_user  | set .Values.conf.datamover.ceph "keyring_ext" -}}


{{- $_ := set .Values.conf.datamover.barbican "barbican_endpoint_type" .Values.conf.triliovault.interface -}}



{{/* **********************************************************************
     set triliovault_object_store.conf services conf parameters datamover
     **********************************************************************
*/}}


{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_access_key_id -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_access_key_id" .Values.conf.triliovault.s3.access_key -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_secret_access_key -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_secret_access_key" .Values.conf.triliovault.s3.secret_key -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_region_name -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_region_name" .Values.conf.triliovault.s3.region_name -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_bucket -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_bucket" .Values.conf.triliovault.s3.bucket -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_signature_version -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_signature_version" .Values.conf.triliovault.s3.signature_version -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_auth_version -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_auth_version" .Values.conf.triliovault.s3.auth_version -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_endpoint_url -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_endpoint_url" .Values.conf.triliovault.s3.endpoint_url -}}
{{- end -}}

{{- if empty .Values.conf.triliovault_object_store_datamover.DEFAULT.vault_s3_ssl -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_ssl" .Values.conf.triliovault.s3.ssl_enabled -}}
{{- end -}}

{{- if .Values.conf.triliovault.s3.ssl_enabled -}}
{{- $_ := set .Values.conf.triliovault_object_store_datamover.DEFAULT "vault_s3_ssl_cert" "/etc/triliovault-datamover/s3-cert.pem" -}}
{{- end -}}



{{/* **********************************************************************
     set logging.conf conf parameters
     **********************************************************************
*/}}


{{- if and (empty .Values.conf.logging.handler_fluent) (has "fluent" .Values.conf.logging.handlers.keys) -}}
{{- $fluentd_host := tuple "fluentd" "internal" $envAll | include "helm-toolkit.endpoints.hostname_namespaced_endpoint_lookup" }}
{{- $fluentd_port := tuple "fluentd" "internal" "service" $envAll | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
{{- $fluent_args := printf "('%s.%s', '%s', %s)" .Release.Namespace .Release.Name $fluentd_host $fluentd_port }}
{{- $handler_fluent := dict "class" "fluent.handler.FluentHandler" "formatter" "fluent" "args" $fluent_args -}}
{{- $_ := set .Values.conf.logging "handler_fluent" $handler_fluent -}}
{{- end -}}

{{- if and (empty .Values.conf.logging.formatter_fluent) (has "fluent" .Values.conf.logging.formatters.keys) -}}
{{- $formatter_fluent := dict "class" "oslo_log.formatters.FluentFormatter" -}}
{{- $_ := set .Values.conf.logging "formatter_fluent" $formatter_fluent -}}
{{- end -}}




{{/* **********************************************************************
     set logging.conf conf parameters
     **********************************************************************
*/}}


{{- if and (empty .Values.conf.logging.handler_fluent) (has "fluent" .Values.conf.logging.handlers.keys) -}}
{{- $fluentd_host := tuple "fluentd" "internal" $envAll | include "helm-toolkit.endpoints.hostname_namespaced_endpoint_lookup" }}
{{- $fluentd_port := tuple "fluentd" "internal" "service" $envAll | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
{{- $fluent_args := printf "('%s.%s', '%s', %s)" .Release.Namespace .Release.Name $fluentd_host $fluentd_port }}
{{- $handler_fluent := dict "class" "fluent.handler.FluentHandler" "formatter" "fluent" "args" $fluent_args -}}
{{- $_ := set .Values.conf.logging "handler_fluent" $handler_fluent -}}
{{- end -}}

{{- if and (empty .Values.conf.logging.formatter_fluent) (has "fluent" .Values.conf.logging.formatters.keys) -}}
{{- $formatter_fluent := dict "class" "oslo_log.formatters.FluentFormatter" -}}
{{- $_ := set .Values.conf.logging "formatter_fluent" $formatter_fluent -}}
{{- end -}}


{{/* **********************************************************************
     DONE
     **********************************************************************
*/}}
---
apiVersion: v1
kind: Secret
metadata:
  name: triliovault-etc-datamover
type: Opaque
data:
  triliovault-datamover.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.datamover | b64enc }}
  logging.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.logging | b64enc }}
  datamover_logging.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.datamover_logging | b64enc }}
  object_store_logging.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.object_store_logging | b64enc }}
  policy.yaml: {{ toYaml .Values.conf.policy | b64enc }}
  triliovault-object-store-datamover.conf: {{ include "helm-toolkit.utils.to_ini" .Values.conf.triliovault_object_store_datamover | b64enc }}
  fuse.conf: {{ .Values.conf.fuse | b64enc }}
  s3-cert.pem: {{ .Files.Get "files/s3-cert.pem" | default "" | b64enc }}
  api-paste.ini: {{ tuple "bin/_api-paste.ini.tpl" . | include "helm-toolkit.utils.template" | b64enc }}
  nova-compute.conf: {{ tuple "bin/_triliovault-nova-compute.conf.tpl" . | include "helm-toolkit.utils.template" | b64enc }}
  {{- if .Values.ceph.enabled }}
  ceph.conf: {{ tuple "bin/_triliovault-ceph.conf.tpl" . | include "helm-toolkit.utils.template" | b64enc }}
  {{ end }}
{{- end }}
