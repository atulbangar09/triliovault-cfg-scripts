---

- name: Set OPENSTACK_ENCRYPTION_SUPPORT to True
  lineinfile:
    path: "{{ node_config_directory }}/horizon/local_settings"
    regexp: '^OPENSTACK_ENCRYPTION_SUPPORT'
    line: OPENSTACK_ENCRYPTION_SUPPORT = True
  when:
    - (enable_barbican is defined) and (enable_barbican == "yes")
    - (enable_horizon is defined) and (enable_horizon | bool)
    - inventory_hostname in groups[triliovault_horizon_group]
  notify:
    - Restart horizon container

- name: Set OPENSTACK_ENCRYPTION_SUPPORT to False
  lineinfile:
    path: "{{ node_config_directory }}/horizon/local_settings"
    regexp: '^OPENSTACK_ENCRYPTION_SUPPORT'
    line: OPENSTACK_ENCRYPTION_SUPPORT = False
  when:
    - (enable_barbican is not defined) or (enable_barbican == "no")
    - (enable_horizon is defined) and (enable_horizon | bool)
    - inventory_hostname in groups[triliovault_horizon_group]
  notify:
    - Restart horizon container

- name: Set TRILIO_ENCRYPTION_SUPPORT to True - default value
  lineinfile:
    path: "{{ node_config_directory }}/horizon/local_settings"
    regexp: '^TRILIO_ENCRYPTION_SUPPORT'
    line: TRILIO_ENCRYPTION_SUPPORT = True
  when:
    - (enable_horizon is defined) and (enable_horizon | bool)
    - inventory_hostname in groups[triliovault_horizon_group]
  notify:
    - Restart horizon container

- name: Set TRILIO_ENCRYPTION_SUPPORT to False if OS is <=centos7 or <=rhel7
  lineinfile:
    path: "{{ node_config_directory }}/horizon/local_settings"
    regexp: '^TRILIO_ENCRYPTION_SUPPORT'
    line: TRILIO_ENCRYPTION_SUPPORT = False
  when:
    - (ansible_distribution == "CentOS" and ansible_distribution_major_version | int <= 7) or (ansible_distribution == "RedHat" and ansible_distribution_major_version | int <= 7)
    - (enable_horizon is defined) and (enable_horizon | bool)
    - inventory_hostname in groups[triliovault_horizon_group]
  notify:
    - Restart horizon container

- name: triliovault - Load rbd module
  include_role:
    name: module-load
  vars:
    modules:
      - { name: rbd }
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- name: triliovault - set nbd module options in modprobe conf
  become: true
  template:
    src: modprobe-nbd.conf.j2
    dest: "/etc/modprobe.d/nbd.conf"
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- name: triliovault - set module-load conf for nbd module
  become: true
  template:
    src: module-load-nbd.conf.j2
    dest: "/etc/modules-load.d/nbd.conf"
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- name: triliovault - load nbd module
  become: true
  modprobe:
    name: "nbd"
    params: "nbds_max=128"
    state: "present"
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- name: Ensuring config directories exist
  become: true
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ triliovault_services }}"

- name: Ensuring /var/trilio directory exist
  become: true
  file:
    path: "{{ triliovault_parent_data_directory }}"
    state: "directory"
    owner: "{{ triliovault_datamover_user_id }}"
    group: "{{ triliovault_datamover_group_id }}"
    mode: "0755"
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- name: Ensuring "{{ triliovault_parent_data_directory }}/triliovault-mounts"  directory exist
  become: true
  file:
    path: "{{ triliovault_parent_data_directory }}/triliovault-mounts"
    state: "directory"
    owner: "{{ triliovault_datamover_user_id }}"
    group: "{{ triliovault_datamover_group_id }}"
    mode: "0755"
  when:
    - inventory_hostname in groups[triliovault_datamover_group]

- include_tasks: copy-certs.yml
  when:
    - kolla_copy_ca_into_containers | bool

- name: Copying over config.json files for services
  become: true
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ triliovault_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over triliovault services conf files
  become: true
  template:
    src: "{{ item.key }}.conf.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/{{item.key}}.conf"
    mode: "0660"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ triliovault_services }}"
  notify:
    - "Restart {{ item.key }} container"

- include_tasks: ceph_cinder.yml
  when:
    - cinder_backend_ceph | bool
    - inventory_hostname in groups[triliovault_datamover_group]

- name: Copy over triliovault backup target certs - ceph s3
  copy:
    src: "{{ node_custom_config }}/triliovault/{{ triliovault_s3_ssl_cert_file_name }}"
    dest: "{{ node_config_directory }}/triliovault-datamover/"
    mode: "0660"
  become: true
  when:
    - triliovault_copy_ceph_s3_ssl_cert | bool
    - inventory_hostname in groups[triliovault_datamover_group]
    - triliovault_services['triliovault-datamover'].enabled | bool
  notify:
    - Restart triliovault-datamover container  
    
- name: Copying over nova.conf for triliovault datamover service
  become: true
  vars:
    service_name: "triliovault-datamover"
  copy:
    src: "{{ node_config_directory }}/nova-compute/nova.conf"
    dest: "{{ node_config_directory }}/triliovault-datamover/nova.conf"
    mode: "0660"
    remote_src: yes
  when:
    - inventory_hostname in groups[triliovault_datamover_group]
    - enable_triliovault | bool
  notify:
    - "Restart triliovault-datamover container"


- include_tasks: check-containers.yml
  when: kolla_action != "config"
